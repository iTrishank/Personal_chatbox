{"version":3,"sources":["components/Header.js","components/ChatList.js","components/ChatBoxWithBoot.js","components/Dashboard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","flipped","set","useSpring","opacity","transform","config","mass","tension","friction","className","onClick","state","div","style","interpolate","o","t","ChatList","chooseContext","useContext","ChooseContext","animateIn","animateOut","ListGroup","id","name","online","map","user","index","Item","key","dataid","action","chosenUser","chooseDispatch","type","value","disabled","variant","ChatBoxWithBoot","props","choosenFriend","chooseFriend","steps","message","trigger","options","label","end","createContext","initialState","choose","reducer","dashbordCol","borderLeft","Dashboard","useReducer","dispatch","Provider","chooseState","Row","Col","xs","sm","Button","Alert","show","Footer","Container","PureComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36b785ff.chunk.js","sourcesContent":["import React, {useState}  from 'react';  \nimport {useSpring, animated as a} from 'react-spring'\nimport '../style/header.css'\n \nfunction Header() { \n    const [flipped, set] = useState(false)\n\n    const { transform, opacity } = useSpring({\n      opacity: flipped ? 1 : 0,\n      transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n      config: {mass: 5, tension: 500, friction: 80}\n    })\n\n    return (   \n        <div className=\"header white-border\" onClick={() => set(state => !state)}>\n            <a.div className=\"h-img back\" style={{ opacity: opacity.interpolate(o => 1 - o), transform }}/>\n            <h1>Spooky Headline</h1>\n            <a.div className=\"h-img front\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`)}}/>\n        </div> \n    )\n}\n\nexport default Header; \n ","import React, { Fragment, useContext } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { ChooseContext } from './Dashboard';\n \nexport default function ChatList() { \n    const chooseContext = useContext(ChooseContext); \n\n    const userList = [\n        {\n            id: 1,\n            name:'Trishank',\n            online: true \n        },\n        {\n            id: 2,\n            name:'Dima',\n            online: false \n        },\n        {\n            id: 3,\n            name:'Shubhi',\n            online: true \n        },\n        {\n            id: 4,\n            name:'Sanya',\n            online: true \n        },\n        {\n            id: 5,\n            name:'Maria',\n            online: false \n        },\n        {\n            id: 6,\n            name:'Alex',\n            online: true, \n        }\n    ];\n\n    const handleCheck = (chosenUser) => {\n        chooseContext.chooseDispatch({type:'chosen', value: chosenUser})\n    }\n\n    return (\n        <Fragment> \n            <div className=\"bg-dark border rounded m-2 pt-2\"> \n                <ScrollAnimation animateIn='zoomIn' animateOut='zoomOut'>\n                    <h5 className=\"text-light\">So who do you wanne chat with? )) </h5> \n                </ScrollAnimation> \n                <ListGroup> \n                {   \n                    userList.map( (user, index) => ( \n                        <ListGroup.Item \n                            key={index} \n                            dataid={user.id}  \n                            action\n                            onClick={() => handleCheck(user)}\n                            disabled={user.online ? false : true}  \n                            variant=\"success\" \n                        > \n                        \n                            {user.name}\n                            {user.online ? \" is online.\" : \" is offline.\"}\n                        </ListGroup.Item>\n                    ))\n                } \n                </ListGroup>  \n            </div> \n        </Fragment> \n    )\n} \n","import React, { Fragment } from 'react'\nimport ChatBot from 'react-simple-chatbot'\nimport ScrollAnimation from 'react-animate-on-scroll'; \n\nfunction ChatBoxWithBoot(props) { \n    const choosenFriend =  props.chooseFriend.value;    \n\n    return (\n        <Fragment>\n            <ScrollAnimation animateIn='bounceInRight' animateOut='bounceOutLeft'>\n                <h5 className=\"mt-2\">Chatting with {choosenFriend.name}: </h5>     \n            </ScrollAnimation> \n            <ChatBot className=\"d-flex justify-content-center\"\n                steps={[\n                    {\n                        id: '1',\n                        message: 'Hello there! How are u doing today?',\n                        trigger: '2',\n                    },\n                    {\n                        id: '2',\n                        options: [\n                            { value: 1, label: 'Good ))', trigger: '4' },\n                            { value: 2, label: 'Kinda good )', trigger: '4' },\n                            { value: 3, label: 'Could be better :/', trigger: '3' },\n                        ],\n                    },\n                    {\n                        id: '3',\n                        message: 'That is sad to hear! Don`t forget that you do not live a positive life with negative thoughts',\n                        trigger: '2',\n                    },\n                    {\n                        id: '4',\n                        message: 'Great to hear! Have a good day!',\n                        end: true,\n                    },\n                ]}\n            />\n        </Fragment>\n    )\n}\n\nexport default ChatBoxWithBoot; \n","import React, { createContext, useReducer } from 'react';\nimport { Row, Col, Alert, Button } from 'react-bootstrap';\nimport ChatList from './ChatList';\n\nimport ChatBoxWithBoot from './ChatBoxWithBoot';\n \nexport const ChooseContext = createContext();\n\nconst initialState = {choose: false};\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'chosen':\n            return {choose: true, action}\n        case 'reset':\n            return initialState\n        default:\n            throw state;\n    }\n}\n\nfunction Dashboard() {\n    const [choose, dispatch] = useReducer(reducer, initialState);  \n\n    return (\n        <ChooseContext.Provider value={{chooseState: choose.choose, chooseDispatch: dispatch}}>\n            <Row>\n                <Col className=\"pt-4\" xs={12} sm={4}> \n                    <ChatList/>\n                    <Button variant=\"primary\" \n                        onClick={() => dispatch({type:'reset'})}\n                        disabled={(choose.choose === true) ? false : true}\n                    >\n                       Leave chatroom \n                    </Button>\n                </Col>\n                <Col className=\"pt-4\" xs={12} sm={8} style={dashbordCol}>  \n                    {\n                        (choose.choose === true) ? \n                            <ChatBoxWithBoot chooseFriend={choose.action}/>\n                            /*<ChatBox chooseFriend={choose.action}/> */:    \n                            <Alert \n                                show={true} \n                                variant=\"warning\"\n                                className=\"m-2\"\n                            >\n                                Choose a friend and try to chat with him/her!\n                            </Alert>  \n                    }   \n                </Col> \n            </Row> \n            \n           \n        </ChooseContext.Provider> \n\n        \n    )\n}\n\nconst dashbordCol = { \n    borderLeft: 'white solid 5px' \n}\n\nexport default Dashboard; \n","import React, {PureComponent} from 'react';   \nimport {Container} from 'react-bootstrap';   \n\nclass Footer extends PureComponent {\n    render() {  \n        return (  \n            <div className=\"mt-4 bg-dark\">\n                <Container className=\"p-4\"> \n                    <span className=\"text-light\">\n                        Created by Trishank Singh\n                    </span>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Footer;\n ","import React from 'react'; \nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard'\nimport Footer from './components/Footer';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" variant=\"light\">\n      <Header/>\n      <Dashboard/>\n      <Footer/>  \n    </div>\n  );\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n   \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n        \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n             \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n \n  fetch(swUrl)\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}